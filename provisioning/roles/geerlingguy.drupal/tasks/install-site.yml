---
- name: Check if site is already installed.
  command: "{{ drush_path }} --root={{ drupal_core_path }} status bootstrap"
  args:
    chdir: "{{ drupal_core_path }}"
  register: drupal_site_installed
  failed_when: "drupal_site_installed.stdout is undefined"
  changed_when: false
  become: no

# See: https://www.drupal.org/node/2569365#comment-11680807
- name: Configure database correctly if using PostgreSQL.
  command: psql -c "ALTER DATABASE {{ drupal_db_name }} SET bytea_output = 'escape';"
<<<<<<< HEAD:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
  when: "('Drupal bootstrap' not in drupal_site_installed.stdout) and (drupal_db_backend == 'pgsql')"
=======
  when: "('Successful' not in drupal_site_installed.stdout) and (drupal_db_backend == 'pgsql')"
>>>>>>> dd747fad95dbf3b776a00731ba9641b7f5e76343:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
  become: yes
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name: Install Drupal with drush.
  command: >
    {{ drush_path }} site-install {{ drupal_install_profile | default('standard') }} -y
    --root={{ drupal_core_path }}
    --site-name="{{ drupal_site_name }}"
    --account-name={{ drupal_account_name }}
    --account-pass={{ drupal_account_pass }}
    --db-url={{ drupal_db_backend }}://{{ drupal_db_user }}:{{ drupal_db_password }}@{{ drupal_db_host }}/{{ drupal_db_name }}
<<<<<<< HEAD:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
    {{ drupal_site_install_extra_args | join(" ") }}
  args:
    chdir: "{{ drupal_core_path }}"
  notify: clear opcache
  when: "'Drupal bootstrap' not in drupal_site_installed.stdout"
=======
    {{ drupal_site_install_extra_args | default([]) | join(" ") }}
  args:
    chdir: "{{ drupal_core_path }}"
  notify: clear opcache
  when: "'Successful' not in drupal_site_installed.stdout"
>>>>>>> dd747fad95dbf3b776a00731ba9641b7f5e76343:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
  become: no

- name: Install configured modules with drush.
  command: >
    {{ drush_path }} pm-enable -y {{ drupal_enable_modules | join(" ") }}
    --root={{ drupal_core_path }}
  args:
    chdir: "{{ drupal_core_path }}"
<<<<<<< HEAD:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
  when: ('Drupal bootstrap' not in drupal_site_installed.stdout) and drupal_enable_modules
=======
  when: ('Successful' not in drupal_site_installed.stdout) and drupal_enable_modules
>>>>>>> dd747fad95dbf3b776a00731ba9641b7f5e76343:provisioning/roles/geerlingguy.drupal/tasks/install-site.yml
  become: no
